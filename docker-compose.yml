version: '2'
networks:
    cluster:
        driver: bridge

services:
    pgmaster:
#        image: paunin/postgresql-cluster-pgsql
        cap_add:
          - ALL
        build:
            context: .
            dockerfile: Pgsql.Dockerfile
        environment:

            INITIAL_NODE_TYPE: master # Used by `repmgr register` as initial node role
                                      # Role can be changed on failover or in live cycle of cluster
                                      # (default: standby, available: master|standby)
            NODE_ID: 1 # Integer number of node
            NODE_NAME: node1 # Node name
            CLUSTER_NODE_NETWORK_NAME: pgmaster # (default: hostname of the node)

            #database we want to use for application
            POSTGRES_PASSWORD: monkey_pass
            POSTGRES_USER: monkey_user
            POSTGRES_DB: monkey_db

            CONFIGS: "listen_addresses:'*'"
                                  # in format variable1:value1[,variable2:value2[,...]]
                                  # used for pgpool.conf file
            #defaults:
            CLUSTER_NAME: pg_cluster # default is pg_cluster
            REPLICATION_DB: replication_db # default is replication_db
            REPLICATION_USER: replication_user # default is replication_user
            REPLICATION_PASSWORD: replication_pass # default is replication_pass
            REPMGR_PRIORITY: 100
        ports:
            - 5432:5432
        networks:
            cluster:
                aliases:
                    - pgmaster
#<<< Branch 1
    pgslave1:
#        image: paunin/postgresql-cluster-pgsql
        cap_add:
          - ALL
        build:
            context: .
            dockerfile: Pgsql.Dockerfile
        environment:
            REPLICATION_PRIMARY_HOST: pgmaster
            NODE_ID: 2
            NODE_NAME: node2
            CLUSTER_NODE_NETWORK_NAME: pgslave1 # (default: hostname of the node)
            REPLICATION_UPSTREAM_NODE_ID: 1
            REPMGR_PRIORITY: 100
        ports:
            - 5441:5432
        networks:
            cluster:
                aliases:
                    - pgslave1

    # Add more slaves if required
    pgslave2:
#        image: paunin/postgresql-cluster-pgsql
        cap_add:
          - ALL
        build:
            context: .
            dockerfile: Pgsql.Dockerfile
        environment:
            REPLICATION_PRIMARY_HOST: pgslave1 # I want to have cascade Streeming replication
            NODE_ID: 3
            NODE_NAME: node3
            CLUSTER_NODE_NETWORK_NAME: pgslave2 # (default: hostname of the node)
            REPLICATION_UPSTREAM_NODE_ID: 1
            REPMGR_PRIORITY: 100
        ports:
            - 5442:5432
        networks:
            cluster:
                aliases:
                    - pgslave2
#>>> Branch 1
#<<< Branch 2
    pgslave3:
#        image: paunin/postgresql-cluster-pgsql
        cap_add:
          - ALL
        build:
            context: .
            dockerfile: Pgsql.Dockerfile
        environment:
            REPLICATION_PRIMARY_HOST: pgmaster
            NODE_ID: 4
            NODE_NAME: node4
            CLUSTER_NODE_NETWORK_NAME: pgslave3 # (default: hostname of the node)
            REPLICATION_UPSTREAM_NODE_ID: 1
            REPMGR_PRIORITY: 101
        ports:
            - 5443:5432
        networks:
            cluster:
                aliases:
                    - pgslave3

    pgslave4:
#        image: paunin/postgresql-cluster-pgsql
        cap_add:
          - ALL
        build:
            context: .
            dockerfile: Pgsql.Dockerfile
        environment:
            REPLICATION_PRIMARY_HOST: pgslave3
            NODE_ID: 5
            NODE_NAME: node5
            CLUSTER_NODE_NETWORK_NAME: pgslave4 # (default: hostname of the node)
            REPLICATION_UPSTREAM_NODE_ID: 1
            REPMGR_PRIORITY: 100
        ports:
            - 5444:5432
        networks:
            cluster:
                aliases:
                    - pgslave4
